CMAKE_MINIMUM_REQUIRED(VERSION 3.20)
PROJECT(SmurfEvaluator CXX)

FIND_PACKAGE(CMLIB REQUIRED)

IF(NOT BRINGAUTO_SYSTEM_DEP)
	INCLUDE(cmake/Dependencies.cmake)
ENDIF()

FIND_PACKAGE(cxxopts 2.0.0 REQUIRED)

OPTION(BRINGAUTO_TESTS "Enable tests" OFF)
OPTION(STATESMURF_TESTS "Enable StateSmurf tests" ON)
OPTION(BRINGAUTO_INSTALL "Enable install feature" OFF)
OPTION(BRINGAUTO_PACKAGE "Enable package creation" OFF)
OPTION(BRINGAUTO_SYSTEM_DEP "Use system dependencies" OFF)

SET(CMAKE_CXX_STANDARD 20)

FIND_PACKAGE(libbringauto_logger)

ADD_SUBDIRECTORY("../DiagramSmurf/" "DiagramSmurf/")

FILE(GLOB_RECURSE source_files "source/*")
ADD_LIBRARY(SmurfEvaluatorLib SHARED ${source_files})
TARGET_INCLUDE_DIRECTORIES(SmurfEvaluatorLib PUBLIC "include")
TARGET_LINK_LIBRARIES(SmurfEvaluatorLib PUBLIC DiagramSmurfLib cxxopts::cxxopts)

ADD_EXECUTABLE(smurfEvaluator main.cpp)
TARGET_LINK_LIBRARIES(smurfEvaluator PUBLIC SmurfEvaluatorLib)

IF (BRINGAUTO_TESTS AND STATESMURF_TESTS)
	ENABLE_TESTING()
	ADD_SUBDIRECTORY("test")
ENDIF()

IF (BRINGAUTO_INSTALL)
	TARGET_INCLUDE_DIRECTORIES(smurfEvaluator
			PUBLIC
			"$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>"
			"$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>"
			)
	INSTALL(TARGETS smurfEvaluator
			EXPORT StateSmurfTargets
			LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
			ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
			RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
			INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
			)
	INSTALL(
			DIRECTORY
			${CMAKE_CURRENT_SOURCE_DIR}/include/
			DESTINATION
			${CMAKE_INSTALL_INCLUDEDIR}
			# COMPONENT
			# Devel
	)
ENDIF()